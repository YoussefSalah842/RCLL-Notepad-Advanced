<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAACYdJREFUaEPV
        mW1wVNUZx51+hOmXTqf90KnTmTotHYdqsZZSZ2SqtQwWaacOQu1YCx1FOyLUCrZNNAu1gMBQaQUZtBZK
        BUrwDYQYTaKRhATIC8lms7vZl+yum2RD3pMlIc64t/M7m+fm3HN3SRDHmXz4ce85e8n9/5/nOeeec+91
        i9YtuW4m4+qYabg6ZhqujpmGq2Om4eoQSvztX6ysKL3z1KmT3zB/uxp2Fb8x683ig3OrKt6+v6aq/OkL
        dbX/TqW6jvijsW+b134aXB3AH/d6vXXc8D8HD3oKCwuLnt2+5QvmdQK//bfO+xUMI/R8ddk/KytK36mv
        fT8aaG36JJlMWolEwopGIjbxePyjz8KEqwOIkv7HieArr/zrVwglIwitq3l/LUIbzlZW1tfVdiMKkfF4
        LDMpMpZBPHR2dqqj8/drN+HqgJKTx4+Yaa86XZkItjYPIACh7e3ttkjaCBT036EtHLEawu2ZpnjS8nde
        zIS7ezPhnn4LWjpSXZSrqWG6OBpEuGj17StJO8Lq684rIeAPtlnNzc1WqvuiQheKwEC03RYZSHYpcbHe
        QUWyf8hKj112MTI2pqhMdG81hU0Xl4F1K+b6a6o/VKnHhEQYA++Vl2VFRuOWN5my2rp6bKHdQyPW8OiY
        LYzz6XIxPRr9tKWUy0AHQn2tfpV+hCKyrrVNRXkofcm+Mec6A5dGXX354FohPf5x4lxn315T3HRwNFYs
        +eGsNctvGjz2v4PKABDdj/oGVPR7h0ccN74W+kbSCv7m0Nh4jCxUJ3sWmAKnwmXgiftv/uTQgX0ZxFPz
        lAw36uwfVDeTG08X/g/llRocVkeBfgEDQ5c/9jam+l+70nSdC6eBu2748voHbrH2vrDDzoBkQW5qitDb
        iMSoji6c63NdQ/QHxsYvQFksda8p8ko4Gp6HfzAHA7u2e2zxDF4Grdw8lwBT8FTXyHVyjoGeS5drINg/
        XHI106qjUbjq1vkY2OJ50pEBBjADmbEg6GL0/qu5JjbxN3UD8KYv+ogpNB+OxoYH5v0YAxvWrrTFM8cD
        8zvzOTc1ySUsF+Y1kYt9imhPf6pjZPQDgSywNDHF5sLR2Pb4bUsZxE88ssJRQiBZ0AVxc56qoVSvJdA2
        hevXqKdwd29GxIuBxFD6XZ0T4eRGU2wuHA2ewmuXz7VWLluoRGMgHIkqgm0hqzYcVyJYDoAIEiGcT/xm
        X6MedhOigbZxjTJA1AVmI9hxLvAdU7CJo/Hkr296DAP3LvqeHflINLtU4MiUShYQ7uu46AIxejbM3+Ua
        TEwYsepiHdaZUHyA5cRRf3zL4daYR3i5KVJkCjZxNB6/78YCDCxecL1dPkRfxgHUxjrU09mMNH1NBvo1
        iKevIdGlRJPNCn9EUe4LXdKF62w/F1hois5r4NFfzvm7GGAhhwFZCwlkATEI0cGAIEJ1EA2Voazw0paQ
        VeJtsyH6B7xRjw4G9l4IP8emyBTuMsATUDfA0oG6l/JRtMcVZEGirKKpIULld8RXR5LWe/6ILRbxtDEi
        /S81tL1oGhATnmrffaZwlwFY/fMbDjELLf/ptyzWQ4inhGRTEkskswbCcVsYYvUoY4J+oTw4WSpm5N9q
        CmZOerPtw83hVxFM3YN+ThbyTauOxqol33yH5wAGWE5I3bfHE0q87KxAhFISumDJhB11X8RCpCDRl8gf
        b84aOdAQLBfBufjrGd/vTfEuA2uWzal66sHvW6uW3qiexmIAwfFkpzIhSBZ0wZgBoo5wRL4baLcF60YQ
        LuXE8UC9v2FPY8iTD7KQa1p1NNjMFKyan3l02c0WDzMpIQTLTgw6ulLKUMVEiYBkgiOi9cgjliMmRLBE
        XjjaGAgi9B/1bUWQ63zbWb/r5YJpoGPj6h9ZjAMeZgxcMYBgAQMYkZrHAKJPtUatt30RhUQfxIQuWsaB
        9B2u9w+L4HzsPB/YbE6rDgMFK28ZwgBlxDiQJzFie/v6FJIByUJZKKEMyFFMvNUSVqhS8WXHAojg1y8E
        LeBc+hC483zQk49tZwMertGnVVs8qUH85sdutygjDLA3poz0qHf3Zo0IMtOIaAxI5DkXEyJayknvO9bg
        zwBTKWWSJeDJd65Pq7Z4dmPPrV1oAUYYyEylZIBZqH9wMIN4fSxIm7FQopnQ0TMiUc8VfQzsPtf6ej7R
        +vkzVS3bZVq1M/DMQ/Ov37XhLmvHH+5QWWAgs7GRBxhiMTE0NGRBT9+AbeB0tEMZQCxHUIK9WY41ZQWL
        EUQXNwYc8DtT6d9qWj3T4enT3ocdGWA39mLBYmvnH+/MkAXGwZ/XPZjRDehgACOYYn2PaFtwc0gJlQHN
        OSYAsUTbLKEj9X5r/3lfdFO1r2iCjVc6JwtMq3YG2I3tf3apRRYwQRkxE6mlRHtc1btEH9EYkCxwJAsM
        ZASLCQXR906WFIIl6oiW6AMzEQKLqlqKpgMPN9sAmxkMvPCnRcoEZfSbe76r3s6RBQZx/+CwHfnB4bRt
        iD6Wz5KF476oDSaONk2WjJSTHnl4ta5VHTdVtewuOO31TIe/fOh9yjbAZubQ1l9YlBEmGAuMA1kTYWAk
        nVbCMaJDP0bIgogW4RJ9jrSPEHkt+no2MLHzTMtJU2guKKENlc3zbANsZo5uzxoAssB0ypJiciYaVgZG
        R0czk2YGMwKbFLKAiTdaokqwLlrGAYhggWxghCWFKVYEE3Gm0A0fNN0qby7Uy6yvfmnW1++57WvPY+Cl
        op/ZWaCM1vz2bntJYUYeAxgR6GNKlWjrg/pwY1CZkKNtpDHgMMI4QCylZAuubJ6Xb0+gZqDZs2fPZSUq
        BsQEg5kyYhxggiiPjY3ZGchlhn0vWZDoOwQ3h1yC5TeOzEwsuXmtYq558qH+IQtkoFgzAGSh4HcLRg7t
        3zPC5oZxgFARi5FcZpiNKCHJBCYEmZUww9KCxR8vztpCoT6+6vBF6Go+a9knvFZkR/Zy4U+OHty0qJBZ
        iWcD5bX47sXr2V6yqCMDvEKXt8xqNkpfcphhy4kBkPHAkSUHy3C+H6S6u9NlZWUVCN69Z88d+UpkKlwd
        JlJifEaijGQQj4+PKzOcS1YE+ni4qa1lPDmxjupO19fXV504cWLztQg2cXXkAhPr169/ntUpDy792wBi
        MSJmBMYLHwpLS0t38U1t3759ji3hdGt8Klwd+WCcbN26dT9vJoi+oItHcHFx8S4+CCL4sxJ5JVwdV0JM
        yAAOBAItRFgEm9d/Hrg6pgIT1DAzxecR4alwdcw0/g+FDZjvCyWnKQAAAABJRU5ErkJggg==
</value>
  </data>
</root>